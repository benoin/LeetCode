package 图解数据结构.动态规划;

/**
 * @author ZY
 * @date 2022/7/22--9:50
 * offer 10.1 斐波那契数列
 *
 *  * 动态规划解题框架:
 *  * 状态定义： 构建问题最优解模型，包括问题最优解的定义、有哪些计算解的自变量；
 *  * 初始状态： 确定基础子问题的解（即已知解），原问题和子问题的解都是以基础子问题的解为起始点，在迭代计算中得到的；
 *  * 转移方程： 确定原问题的解与子问题的解之间的关系是什么，以及使用何种选择规则从子问题最优解组合中选出原问题最优解；
 *  * 返回值： 确定应返回的问题的解是什么，即动态规划在何处停止迭代；
 */
public class offer_10_1 {
    public static int fib(int n) {
        if (n < 2) return n;
        int a = 0, b = 1, tmp = 0;
        for (int i = 2; i <= n; i++) {
            tmp = a;
            a = b;
            b = (tmp + b) % 1000000007;
        }
        return b;
    }
}
